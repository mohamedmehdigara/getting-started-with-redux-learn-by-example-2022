{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\p-c\\\\Downloads\\\\Github\\\\getting-started-with-redux-learn-by-example-2022\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\p-c\\\\Downloads\\\\Github\\\\getting-started-with-redux-learn-by-example-2022\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport initialState from './initialState';\nexport default function contactReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.contacts;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    /* Add contacts to the state array */\n    case \"ADD_CONTACT\":\n      {\n        return _objectSpread({}, state, {\n          contactList: [].concat(_toConsumableArray(state.contactList), [state.newContact])\n        });\n      }\n\n    /* Handle input for the contact form. \r\n    The payload (input changes) gets merged with the newContact object\r\n    */\n\n    case \"HANDLE_INPUT_CHANGE\":\n      {\n        return _objectSpread({}, state, {\n          newContact: _objectSpread({}, state.newContact, action.payload)\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","contactReducer","state","contacts","action","type","contactList","newContact","payload"],"sources":["C:/Users/p-c/Downloads/Github/getting-started-with-redux-learn-by-example-2022/src/reducers/contactsReducer.js"],"sourcesContent":["import initialState from './initialState';\r\n\r\n\r\nexport default function contactReducer(state = initialState.contacts, action) {\r\n    switch(action.type) {\r\n        \r\n        /* Add contacts to the state array */\r\n     \r\n\t\tcase \"ADD_CONTACT\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontactList: [...state.contactList, state.newContact]\r\n\t\t\t}\r\n\t\t}\r\n        \r\n        /* Handle input for the contact form. \r\n        The payload (input changes) gets merged with the newContact object\r\n        */\r\n\r\n\t\tcase \"HANDLE_INPUT_CHANGE\": {\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state, newContact: {\r\n\t\t\t\t\t...state.newContact, ...action.payload }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault: return state;\r\n\t}\r\n}"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAGA,eAAe,SAASC,cAAT,GAA+D;EAAA,IAAvCC,KAAuC,uEAA/BF,YAAY,CAACG,QAAkB;EAAA,IAARC,MAAQ;;EAC1E,QAAOA,MAAM,CAACC,IAAd;IAEI;IAEN,KAAK,aAAL;MAAoB;QACnB,yBACIH,KADJ;UAECI,WAAW,+BAAMJ,KAAK,CAACI,WAAZ,IAAyBJ,KAAK,CAACK,UAA/B;QAFZ;MAIA;;IAEK;AACR;AACA;;IAEE,KAAK,qBAAL;MAA4B;QAE3B,yBACIL,KADJ;UACWK,UAAU,oBAChBL,KAAK,CAACK,UADU,EACKH,MAAM,CAACI,OADZ;QADrB;MAIA;;IAED;MAAS,OAAON,KAAP;EAvBP;AAyBH"},"metadata":{},"sourceType":"module"}